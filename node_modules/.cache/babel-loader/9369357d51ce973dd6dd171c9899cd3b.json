{"ast":null,"code":"import _classCallCheck from\"/home/geofrey/Desktop/work space/React.js-todoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/geofrey/Desktop/work space/React.js-todoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/geofrey/Desktop/work space/React.js-todoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/geofrey/Desktop/work space/React.js-todoList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import propTypes from'prop-types';export var TodoItem=/*#__PURE__*/function(_Component){_inherits(TodoItem,_Component);var _super=_createSuper(TodoItem);function TodoItem(){var _this;_classCallCheck(this,TodoItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.getStyle=function(){return{background:'#f4f4f4',padding:'10px',borderBottom:'1px #ccc dotted',textDecoration:_this.props.todo.complete?'line-through':'none'};};return _this;}_createClass(TodoItem,[{key:\"render\",// markComplete = (e) => {\n//     console.log(this.props);\n// }\nvalue:function render(){var _this$props$todo=this.props.todo,id=_this$props$todo.id,title=_this$props$todo.title;return/*#__PURE__*/React.createElement(\"div\",{style:this.getStyle()},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",onChange:this.props.markComplete.bind(this,id)}),\" \",' ',title,/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.delTodo.bind(this,id),style:btnStyle},\"X\")));}}]);return TodoItem;}(Component);TodoItem.protoTypes={todo:propTypes.object.isRequired};var btnStyle={background:'#ff0000',color:'#fff',border:'none',padding:'5px 8px',borderRadius:'50%',cursor:'pointer',float:'right'};export default TodoItem;","map":{"version":3,"sources":["/home/geofrey/Desktop/work space/React.js-todoList/src/components/TodoItem.js"],"names":["React","Component","propTypes","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","complete","id","title","markComplete","bind","delTodo","btnStyle","protoTypes","object","isRequired","color","border","borderRadius","cursor","float"],"mappings":"opBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA,UAAaC,CAAAA,QAAb,mUACIC,QADJ,CACe,UAAM,CACb,MAAO,CACHC,UAAU,CAAE,SADT,CAEHC,OAAO,CAAE,MAFN,CAGHC,YAAY,CAAE,iBAHX,CAIJC,cAAc,CAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,QAAhB,CAA2B,cAA3B,CAA4C,MAJxD,CAAP,CAMH,CARL,oDASI;AACA;AACA;AAXJ,uBAYa,sBACgB,KAAKF,KAAL,CAAWC,IAD3B,CACGE,EADH,kBACGA,EADH,CACOC,KADP,kBACOA,KADP,CAEL,mBACI,2BAAK,KAAK,CAAE,KAAKT,QAAL,EAAZ,eACI,0CACI,6BAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAG,KAAKK,KAAL,CAAWK,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,CAAmCH,EAAnC,CAAlC,EADJ,KACkF,GADlF,CAEKC,KAFL,cAGI,8BAAQ,OAAO,CAAE,KAAKJ,KAAL,CAAWO,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,CAA8BH,EAA9B,CAAjB,CAAoD,KAAK,CAAEK,QAA3D,MAHJ,CADJ,CADJ,CASH,CAvBL,sBAA8BhB,SAA9B,EA2BAE,QAAQ,CAACe,UAAT,CAAsB,CAClBR,IAAI,CAAER,SAAS,CAACiB,MAAV,CAAiBC,UADL,CAAtB,CAIE,GAAMH,CAAAA,QAAQ,CAAG,CACbZ,UAAU,CAAE,SADC,CAEbgB,KAAK,CAAE,MAFM,CAGbC,MAAM,CAAE,MAHK,CAIbhB,OAAO,CAAE,SAJI,CAKbiB,YAAY,CAAE,KALD,CAMbC,MAAM,CAAE,SANK,CAObC,KAAK,CAAE,OAPM,CAAjB,CAUF,cAAetB,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n           textDecoration: this.props.todo.complete ? 'line-through' : 'none'\n        }\n    }\n    // markComplete = (e) => {\n    //     console.log(this.props);\n    // }\n    render() {\n        const { id, title} = this.props.todo\n        return (\n            <div style={this.getStyle()}>\n                <p>\n                    <input type='checkbox' onChange= {this.props.markComplete.bind(this, id)}/> { ' ' }\n                    {title}\n                    <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>X</button> \n                </p> \n            </div>\n        )\n    }\n}\n\n\nTodoItem.protoTypes = {\n    todo: propTypes.object.isRequired\n  }\n\n  const btnStyle = {\n      background: '#ff0000',\n      color: '#fff',\n      border: 'none',\n      padding: '5px 8px',\n      borderRadius: '50%',\n      cursor: 'pointer',\n      float: 'right'\n  }\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}